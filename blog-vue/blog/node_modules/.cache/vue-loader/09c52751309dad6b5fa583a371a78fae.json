{"remainingRequest":"C:\\Users\\xiaoxin\\Desktop\\thatblog2\\blog-master\\blog-vue\\blog\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\xiaoxin\\Desktop\\thatblog2\\blog-master\\blog-vue\\blog\\src\\components\\ChatRoom.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\xiaoxin\\Desktop\\thatblog2\\blog-master\\blog-vue\\blog\\src\\components\\ChatRoom.vue","mtime":1632568076000},{"path":"C:\\Users\\xiaoxin\\Desktop\\thatblog2\\blog-master\\blog-vue\\blog\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\xiaoxin\\Desktop\\thatblog2\\blog-master\\blog-vue\\blog\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"C:\\Users\\xiaoxin\\Desktop\\thatblog2\\blog-master\\blog-vue\\blog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\xiaoxin\\Desktop\\thatblog2\\blog-master\\blog-vue\\blog\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}